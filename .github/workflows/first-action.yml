name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  building:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v5.0.0

      - name: log in to docker hub
        uses: docker/login-action@v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: docker build and push
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/spring-petclinic:${{ github.run_number }}

      - name: Slack Notification
        uses: slackapi/slack-github-action@v2.1.1
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "*GitHub Action build result*: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
       
      - name: Sonarqube
        uses: SonarSource/sonarqube-scan-action@v5.3.1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        
     
       # FOR sonarqube
   #   - name: Set up JDK 17
    #    uses: actions/setup-java@v4
     #   with:
      #    java-version: 17
       #   distribution: 'zulu' # Alternative distribution options are available.
#      - name: Cache SonarQube packages
 #       uses: actions/cache@v4
  #      with:
   #       path: ~/.sonar/cache
    #      key: ${{ runner.os }}-sonar
     #     restore-keys: ${{ runner.os }}-sonar
      #- name: Cache Maven packages
       # uses: actions/cache@v4
        #with:
         # path: ~/.m2
          #key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          #restore-keys: ${{ runner.os }}-m2
#      - name: Build and analyze
 #       env:
  #        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
   #       SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    #    run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=petclinic_github_actions -Dsonar.projectName='petclinic_github_actions'   
   #   - name: sonarqube
    #    uses: SonarSource/sonarqube-scan-action@v5.3.1
     #   with:

#      - name: Building
 #       run: |
  #        echo "BUILDING ......"
   #       mvn clean package -DskipTests

#      - name: Run
 #       run: |
  #        echo "RUN ......"
   #       docker build -t spring-petclinic .
          
      
      
#  docker rm -f petclinic_container
# docker run -d -p 9193:9966 --name petclinic_container spring-petclinic
  
#  checkout:
 #   runs-on: ubuntu-latest
  #    steps: 
   #   - uses: actions/checkout@v5.0.0
  
#  build:

 #   runs-on: ubuntu-latest

  #  steps:
   # - uses: actions/checkout@v4
  #  - name: Build the Docker image
   #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
